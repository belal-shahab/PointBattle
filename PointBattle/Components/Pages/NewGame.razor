@page "/newgame"
@using PointBattle.Models
@using PointBattle.Services
@inject NavigationManager Navigation
@inject DatabaseService DbService

<div class="container">
    <h2>New Game</h2>

    <div class="form-group">
        <label>Group A Name:</label>
        <input @bind="groupAName" placeholder="Group A" />
    </div>

    <div class="form-group">
        <label>Group B Name:</label>
        <input @bind="groupBName" placeholder="Group B" />
    </div>

    <div class="button-container">
        <button class="btn secondary" @onclick="Cancel">Cancel</button>
        <button class="btn primary" @onclick="StartGame">Start Game</button>
    </div>
</div>

@code {
    private string groupAName = "Group A";
    private string groupBName = "Group B";

    private void Cancel()
    {
        Navigation.NavigateTo("/");
    }

    private async Task StartGame()
    {
        // Create a completely brand new game
        var game = new Game
            {
                GroupA = !string.IsNullOrWhiteSpace(groupAName) ? groupAName : "Group A",
                GroupB = !string.IsNullOrWhiteSpace(groupBName) ? groupBName : "Group B",
                Date = DateTime.Now,
                IsCompleted = false,
                Rounds = new List<Round>()
            };

        // Save to database
        var id = await DbService.SaveGameAsync(game);

        // Now if we have a valid ID, navigate to the game screen
        if (id > 0)
        {
            Navigation.NavigateTo($"/game/{id}", forceLoad: true);
        }
        else
        {
            // Add error handling if we don't get a valid ID
            Console.WriteLine("Error: Failed to create new game");
        }
    }
}